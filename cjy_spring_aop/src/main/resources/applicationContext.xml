<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
">
<!--目标对象-->
    <bean id="target" class="com.cjy.aop.Target"></bean>
<!--切面对象-->
    <bean id="MyAspet" class="com.cjy.aop.MyAspect"></bean>
    <!--配置织入：告诉spring框架 哪些方法(切点)需要进行哪些增强(前置、后置...)这里的前置增强配置代码与程序是解耦合的-->
    <aop:config>
<!--        声明切面-->
        <aop:aspect ref="MyAspet"><!--这句话配置后才能真正说明上面配置的切面MyAspet-->
            <!--切面：切点+通知  当你去访问com.cjy.aop.Target.save()时，其要作一个前置增强，而这个前置增强的方法代码在MyAspet的before中-->
<!--            aop:before增强的类型，增强是MyAspet切面内部的方法名，这里的方法名是before-->
<!--            pointcut切点表达式的写法，这里只用了一个方法，通过一个表达式可以指定多个方法-->
<!--            <aop:before method="before" pointcut="execution(public void com.cjy.aop.Target.save())"/>-->
            <aop:before method="before" pointcut="execution(* com.cjy.aop.*.*(..))"/>
            <aop:after method="afterReturning" pointcut="execution(* com.cjy.aop.*.*(..))"/>
            <aop:around method="around" pointcut="execution(* com.cjy.aop.*.*(..))"/>
            <aop:after-throwing method="afterThrowing" pointcut="execution(* com.cjy.aop.*.*(..))"/>
            <aop:after method="after" pointcut="execution(* com.cjy.aop.*.*(..))"/>
        </aop:aspect>
    </aop:config>
</beans>